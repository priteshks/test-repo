# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    outputs:
      orgs: ${{ steps.orgs.outputs.orgs }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Set repository ID 
        run: echo "REPOSITORY_ID=${{ github.repository }}" >> $GITHUB_ENV
      - name: Validate repository ID 
        if: ${{ github.event_name == 'push' && env.REPOSITORY_ID != '' && env.REPOSITORY_ID > 0 }} 
        run: |
          echo "Valid repository ID: ${{ env.REPOSITORY_ID }}"
        
      - name: Run a one-line script
        if: ${{ env.REPOSITORY_ID == "priteshks/test-repo" }}
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        id: orgs
        run: |
          REPOSITORY_OWNER=${{ github.repository_owner }}
          eventtype=${{ github.event_name }}
          if [[ "$REPOSITORY_OWNER" == "priteshks" ]]; then
            orgs=[$(echo "\"${{ github.event_name }}\"" | jq .)]
          else
            orgs=[$(echo "\"$REPOSITORY_OWNER\"" | jq .)]
          fi
          echo ${{ github.event_name }}
          echo "orgs=$orgs" >> $GITHUB_OUTPUT

  process-orgs:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        org: ${{ fromJson(needs.build.outputs.orgs) }}

    steps:
      - name: Complete
        run: echo "Organization ${{ matrix.org}} processed successfully."
